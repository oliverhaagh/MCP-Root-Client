/*
 * MCP Root CA Service
 * Service for maintaining a list of root CAs
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@maritimeconnectivity.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RevocationRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-23T12:06:32.267Z[GMT]")
public class RevocationRequest {
  @SerializedName("algorithmIdentifier")
  private String algorithmIdentifier = null;

  @SerializedName("attestationId")
  private Long attestationId = null;

  @SerializedName("attestorId")
  private Long attestorId = null;

  @SerializedName("rootCAid")
  private Long rootCAid = null;

  @SerializedName("signature")
  private String signature = null;

  public RevocationRequest algorithmIdentifier(String algorithmIdentifier) {
    this.algorithmIdentifier = algorithmIdentifier;
    return this;
  }

   /**
   * The algorithm identifier of the signature
   * @return algorithmIdentifier
  **/
  @Schema(required = true, description = "The algorithm identifier of the signature")
  public String getAlgorithmIdentifier() {
    return algorithmIdentifier;
  }

  public void setAlgorithmIdentifier(String algorithmIdentifier) {
    this.algorithmIdentifier = algorithmIdentifier;
  }

  public RevocationRequest attestationId(Long attestationId) {
    this.attestationId = attestationId;
    return this;
  }

   /**
   * The ID of the attestation that is being revoked
   * @return attestationId
  **/
  @Schema(required = true, description = "The ID of the attestation that is being revoked")
  public Long getAttestationId() {
    return attestationId;
  }

  public void setAttestationId(Long attestationId) {
    this.attestationId = attestationId;
  }

  public RevocationRequest attestorId(Long attestorId) {
    this.attestorId = attestorId;
    return this;
  }

   /**
   * The ID of the attestor making the attestation
   * @return attestorId
  **/
  @Schema(required = true, description = "The ID of the attestor making the attestation")
  public Long getAttestorId() {
    return attestorId;
  }

  public void setAttestorId(Long attestorId) {
    this.attestorId = attestorId;
  }

  public RevocationRequest rootCAid(Long rootCAid) {
    this.rootCAid = rootCAid;
    return this;
  }

   /**
   * The ID of the root CA being revoked
   * @return rootCAid
  **/
  @Schema(required = true, description = "The ID of the root CA being revoked")
  public Long getRootCAid() {
    return rootCAid;
  }

  public void setRootCAid(Long rootCAid) {
    this.rootCAid = rootCAid;
  }

  public RevocationRequest signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * The HEX encoded signature that is made by signing the original attestation signature of the root CAwith the private key of the attestor
   * @return signature
  **/
  @Schema(required = true, description = "The HEX encoded signature that is made by signing the original attestation signature of the root CAwith the private key of the attestor")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RevocationRequest revocationRequest = (RevocationRequest) o;
    return Objects.equals(this.algorithmIdentifier, revocationRequest.algorithmIdentifier) &&
        Objects.equals(this.attestationId, revocationRequest.attestationId) &&
        Objects.equals(this.attestorId, revocationRequest.attestorId) &&
        Objects.equals(this.rootCAid, revocationRequest.rootCAid) &&
        Objects.equals(this.signature, revocationRequest.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithmIdentifier, attestationId, attestorId, rootCAid, signature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RevocationRequest {\n");
    
    sb.append("    algorithmIdentifier: ").append(toIndentedString(algorithmIdentifier)).append("\n");
    sb.append("    attestationId: ").append(toIndentedString(attestationId)).append("\n");
    sb.append("    attestorId: ").append(toIndentedString(attestorId)).append("\n");
    sb.append("    rootCAid: ").append(toIndentedString(rootCAid)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
